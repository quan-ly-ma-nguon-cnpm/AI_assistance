@model AI_Application.Areas.Identity.Pages.Account.Manage.IndexModel
@inject SignInManager<IdentityUser> SignInManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" asp-page="./Index">Profile</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" asp-page="./Email">Email</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" asp-page="./ChangePassword">Password</a>
    </li>
    @if (hasExternalLogins)
    {
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a>
        </li>
    }
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" asp-page="./PersonalData">Personal data</a>
    </li>

    <!-- ✅ Hiển thị "Manage Roles" nếu là Admin -->
    @if (Model.UserRole == "Admin")
    {
        <li class="nav-item">
            <a class="nav-link @ManageNavPages.ManageRolesNavClass(ViewContext)"
               asp-controller="Role" asp-action="Index">
                Manage Roles
            </a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link disabled text-muted">Role: @Model.UserRole</a>
        </li>
    }
</ul>
